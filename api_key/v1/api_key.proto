syntax = "proto3";

package api_key.v1;

import "buf/validate/validate.proto";
import "google/protobuf/timestamp.proto";

option go_package = "api_key/pb";

service APIKeyService {
  rpc Validate(ValidateRequest) returns (ValidateResponse);
  rpc ValidateConsume(ValidateRequest) returns (ValidateConsumeResponse);
}

message RequestMetadata {
  string body = 1;
  string cookies = 2;
  string headers = 3;
  string query_params = 4;
  string body_content_type = 5 [ (buf.validate.field).string = {
    in : [
      "",
      "application/xml",
      "application/json",
      "text/plain",
      "text/html",
      "multipart/form-data",
      "application/x-www-form-urlencoded",
      "application/octet-stream"
    ]
  } ];
}

message Request {
  string path = 1;
  string method = 2 [ (buf.validate.field).string = {
    in : [
      "GET",
      "HEAD",
      "POST",
      "PUT",
      "PATCH",
      "DELETE",
      "CONNECT",
      "OPTIONS",
      "TRACE"
    ]
  } ];
  string ip_address = 3;
  RequestMetadata metadata = 4;
  google.protobuf.Timestamp request_time = 5;
}

message ValidateRequest {
  string api_key = 1;
  Request request = 2;
  string service_name = 3;
  string service_version = 4;
}

message Project {
  int64 id = 1;
  string name = 2;
}

message Client {
  int64 id = 1;
  string name = 2;
}

message Environment {
  int64 id = 1;
  string name = 2;
}

message ValidateResponse {
  bool valid = 1;
  string request_id = 2;
  string failure_code = 3 [ (buf.validate.field).string = {
    in: [
      "API_KEY_INVALID",
      "QUOTA_EXCEEDED",
      "API_KEY_EXPIRED",
      "API_KEY_DISABLED",
      "SERVICE_MISMATCH",
      "SERVICE_DISABLED",
      "SERVICE_DEPRECATED",
      "SERVICE_NOT_ASSIGNED",
      "ENVIRONMENT_DISABLED"
    ]
  } ];
  Project project = 4;
  Client client = 5;
  Environment environment = 6;
}

message ValidateConsumeResponse {
  ValidateResponse base_response = 1;
  int64 available_request = 2;
}
